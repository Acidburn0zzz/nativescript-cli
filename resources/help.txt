--[]--

Usage:
    $ tns <command> [command parameters] [--command <options>]

General commands:
    help <command>                  Shows additional information about the commands in this list.

    create                          Creates a new project for native development with NativeScript.
    platform add                    Configures the current project to target the selected platform.
    platform list                   Lists all platforms that the project currently targets.
    platform remove                 Removes the selected platform from the platforms that the project currently targets.
                                    This operation deletes all platform-specific files and subdirectories from your project.
    prepare                         Copies cross-platform content to the subdirectory for the selected target platform. 
                                    This lets you build the project with the SDK for the selected platform and deploy it on device.
    build                           Builds the project for the selected target platform and produces an application package.
    run                             Runs your project on a connected device. This is shorthand for prepare, build, and deploy.

General options:
    --help              Prints help about the selected command.
    --path <Directory>  Specifies the directory that contains the project. If not set, the project is searched for
                        in the current directory and all directories above it.
    --version           Prints the client version.
--[/]--

--[help]--

Usage:
    $ tns help [<Command>]
    
Lists the available commands or shows information about the selected command.
<Command> is any of the available commands as listed by $ tns help.

--[/]--

--[create]--

Usage:
    $ tns create <App name> [--path <Directory>] [--appid <App ID>] [--copy-from <Directory>]

Creates a new project for native development with NativeScript.
<App name> is the name of project. The specified name must meet the requirements of all platforms that you want to target. 
           For projects that target Android, you can use uppercase or lowercase letters, numbers, and underscores. The name must start with a letter.
           For projects that target iOS, you can use uppercase or lowercase letters, numbers, and hyphens. 

Options:
    --path - Specifies the directory where you want to create the project, if different from the current directory.
            The directory must be empty.
    --appid - Sets the application identifier for your project. The application identifier must be a domain name in reverse and must
              meet the requirements of all platforms that you want to target.
              For projects that target Android, you can use uppercase or lowercase letters, numbers, and underscores in the strings of the reversed domain name, separated by a dot. Strings must be separated by a dot and must start with a letter. For example: com.nativescript.My_Andro1d_App
              For projects that target iOS, you can use uppercase or lowercase letters, numbers, and hyphens in the strings of the reversed domain name. Strings must be separated by a dot. For example: com.nativescript.My-i0s-App
              If not specified, the application identifier is set to com.telerik.<App name>.
    --copy-from - Specifies a directory which contains custom assets that you want to use in your NativeScript project. If not set,
                  the default hello-world template is used.

--[/]--

--[platform]--

Usage:
    $ tns platform <Command>

You must run the platform command with a related command.

<Command> is a related command that extends the platform command. You can run the following related commands:
    list - Lists all platforms that the project currently targets. You can build and deploy your project only for 
           the active target platforms.
    add - Configures the current project to target the selected platform. After adding the target platform, you can 
          build and deploy your app to it.
    remove - Removes the selected platform from the platforms that the project currently targets. After removing 
             the target platform, you can no longer build and deploy your app to it.
             This operation deletes all platform-specific files and subdirectories from your project.

--[/]--

--[platform|list]--

Usage:
    $ tns platform list

Lists all platforms that the project currently targets. You can build and deploy your project only for the active target platforms.

--[/]--

--[platform|add]--

Usage:
    $ tns platform add <Platform>

Platform-specific usage:
    $ tns platform add android
    $ tns platform add ios

Configures the current project to target the selected platform. When you add a target platform, the Telerik NativeScript CLI adds a corresponding platform-specific subdirectory under the platforms directory. This platform-specific directory contains the necessary files to let you build your project for the target platform.

In this version of Telerik NativeScript, you can target iOS and Android, based on your system. You need to have your system configured for development with the target platform.
On Windows systems, you can target Android. 
On OS X systems, you can target Android and iOS.


--[/]--

--[platform|remove]--

Usage:
    $ tns platform remove <platform>

Platform-specific usage:
    $ tns platform remove android
    $ tns platform remove ios

Removes the selected platform from the platforms that the project currently targets. After removing the target platform, you can no longer build and deploy your app to it.

This operation deletes all platform-specific files and subdirectories from your project.

--[/]--

--[prepare]--

Usage:
    $ tns prepare [<Platform>]

Platform-specific usage:
    $ tns prepare android
    $ tns prepare ios

Copies cross-platform content to the subdirectory for the selected target platform. This lets you build the project with 
the SDK for the selected platform.

--[/]--

--[build]--

Usage:
    $ tns build [<platform>]

Platform-specific usage:
    $ tns build android
    $ tns build ios

Builds the project for the selected target platform. This generates platform-specific code within the platform subdirectory
in the project.

--[/]--

--[run]--

Usage:
    $ tns run [<platform>]

Platform-specific usage:
    $ tns run android
    $ tns run ios

Runs your project on a connected device. This is shorthand for prepare, build, and deploy.

--[/]--

